package com.rmd.personal.projecteuler.p20to39; // SUPPRESS CHECKSTYLE fileLength

import com.rmd.personal.projecteuler.Problem;

import java.util.HashSet;
import java.util.Set;

public class P029 implements Problem {

    private static final int DEFAULT_MAX_AB = 100;

    private int maxAB;

    public P029() {
        this.setMaxAB(DEFAULT_MAX_AB);
    }

    public int getMaxAB() {
        return maxAB;
    }

    public void setMaxAB(int maxAB) {
        this.maxAB = maxAB;
    }

    @Override
    public String getDescription() {
        return "Consider all integer combinations of ab for 2 ≤ a ≤ 5 and 2 ≤ b ≤ 5:\n\n"
                + "2^2=4, 2^3=8, 2^4=16, 2^5=32\n"
                + "3^2=9, 3^3=27, 3^4=81, 3^5=243\n"
                + "4^2=16, 4^3=64, 4^4=256, 4^5=1024\n"
                + "5^2=25, 5^3=125, 5^4=625, 5^5=3125\n"
                + "If they are then placed in numerical order, with any repeats removed, "
                + "we get the following sequence of 15 distinct terms:\n\n"
                + "4, 8, 9, 16, 25, 27, 32, 64, 81, 125, 243, 256, 625, 1024, 3125\n\n"
                + "How many distinct terms are in the sequence generated by ab for 2 ≤ a ≤ 100 and 2 ≤ b ≤ 100?";
    }

    @Override
    public String run() {
        Set<Double> values = new HashSet<Double>();
        for (int a = 2; a <= this.getMaxAB(); a++) {
            for (int b = 2; b <= this.getMaxAB(); b++) {
                values.add(Math.pow(a, b));
            }
        }

        return String.valueOf(values.size());
    }
}
