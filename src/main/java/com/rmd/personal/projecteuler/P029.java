package com.rmd.personal.projecteuler; // SUPPRESS CHECKSTYLE fileLength

import java.util.HashSet;
import java.util.Set;

public class P029 implements Problem {

    private static final int DEFAULT_MAX_AB = 100;

    private int maxAB;

    public P029() {
        this.setMaxAB(DEFAULT_MAX_AB);
    }

    public int getMaxAB() {
        return maxAB;
    }

    public void setMaxAB(int maxAB) {
        this.maxAB = maxAB;
    }

    @Override
    public String getDescription() {
        return "Consider all integer combinations of ab for 2 ≤ a ≤ 5 and 2 ≤ b ≤ 5:\n\n"
                + "22=4, 23=8, 24=16, 25=32\n"
                + "32=9, 33=27, 34=81, 35=243\n"
                + "42=16, 43=64, 44=256, 45=1024\n"
                + "52=25, 53=125, 54=625, 55=3125\n"
                + "If they are then placed in numerical order, with any repeats removed, "
                + "we get the following sequence of 15 distinct terms:\n\n"
                + "4, 8, 9, 16, 25, 27, 32, 64, 81, 125, 243, 256, 625, 1024, 3125\n\n"
                + "How many distinct terms are in the sequence generated by ab for 2 ≤ a ≤ 100 and 2 ≤ b ≤ 100?";
    }

    @Override
    public String run() {
        Set<Double> values = new HashSet<Double>();
        for (int a = 2; a <= this.getMaxAB(); a++) {
            for (int b = 2; b <= this.getMaxAB(); b++) {
                values.add(Math.pow(a, b));
            }
        }

        return String.valueOf(values.size());
    }
}
